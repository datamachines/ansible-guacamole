---

  - name: Gather OS-specific variables
    include_vars: "{{ ansible_distribution }}.yml"
    tags: always



  
#- name: update and upgrade all to latest version
#  apt:
#    upgrade: yes
#    update_cache: yes
#    cache_valid_time: 86400 #One day  
#  when: ansible_distribution == "Ubuntu"



  - name: Download Server source code 
    get_url:
      url: http://apache.org/dyn/closer.cgi?action=download&filename=guacamole/{{ GUACAMOLE_VERSION }}/source/guacamole-server-{{ GUACAMOLE_VERSION }}.tar.gz
      dest: /home/{{ansible_user}}
    
   

  - name: Extract the guacamole-server source
    unarchive: src="guacamole-server-{{ GUACAMOLE_VERSION }}.tar.gz" copy=no dest=/home/{{ansible_user}}
    tags: extract
  
  - name: Install epel-release for CentOS
    yum: name=epel-release state=latest update_cache=yes
    when: ansible_distribution == "CentOS"
  
    
  - name: Download MySQL Community Repo 
    get_url:
      url: http://repo.mysql.com/mysql-community-release-el7-7.noarch.rpm 
      dest: /tmp
    when: ansible_distribution == "CentOS"

  
  - name: Install MySQL Community Repo
    yum: 
      name: /tmp/mysql-community-release-el7-7.noarch.rpm
      state: present
    when: ansible_distribution == "CentOS"  
    
  - name: Install dependencies for guacamole
    package: name={{ item }} state=latest
    with_items: '{{ PACKAGES }}'
    
  - name: Build guacamole-server from source
    shell: '{{ item }}'
    args:
      chdir: guacamole-server-{{ GUACAMOLE_VERSION }}
      creates: /usr/local/sbin/guacd
    with_items: [ ./configure --with-init-dir=/etc/init.d, make, make install ]
  - name: Run ldconfig so that guacd can run correctly
    shell: ldconfig
    
  - name: auto start guacd
    command: update-rc.d guacd defaults
    when: ansible_distribution == "Ubuntu"
    
  - name: auto start guacd
    command: chkconfig guacd on
    when: ansible_distribution == "CentOS"


  - name: Download client war file 
    get_url:
      url: http://apache.org/dyn/closer.cgi?action=download&filename=guacamole/{{ GUACAMOLE_VERSION }}/binary/guacamole-{{ GUACAMOLE_VERSION }}.war
      dest: /var/lib/{{ TOMCAT_NAME }}/webapps/{{ GUACAMOLE_APP_NAME }}.war
      owner: "{{ TOMCAT_USER }}"
      group: "{{ TOMCAT_USER }}"
      mode: 0755
 
  - name: Unpack war
    tags: undatewar
    unarchive: 
      src: /var/lib/{{ TOMCAT_NAME }}/webapps/{{ GUACAMOLE_APP_NAME }}.war
      dest: /var/lib/{{ TOMCAT_NAME }}/webapps/{{ GUACAMOLE_APP_NAME }}
      creates: /var/lib/{{ TOMCAT_NAME }}/webapps/{{ GUACAMOLE_APP_NAME }}
      remote_src: yes
     
  - name: copy DMC logo images to /var/lib/{{ TOMCAT_NAME }}/webapps/{{ GUACAMOLE_APP_NAME }}/images/
    tags: undatewar
    copy:
      src: "{{ item }}"
      dest: /var/lib/{{ TOMCAT_NAME }}/webapps/{{ GUACAMOLE_APP_NAME }}/images/
      owner: "{{ TOMCAT_USER }}"
      group: "{{ TOMCAT_USER }}"
      mode: 0755
    with_fileglob:
      - roles/server/templates/*.png
  
  - name: update Name  in /var/lib/{{ TOMCAT_NAME }}/webapps/{{ GUACAMOLE_APP_NAME }}/translations/en.json to reflect {{ APP_TITLE }}
    tags: undatewar
    lineinfile:
      path: /var/lib/{{ TOMCAT_NAME }}/webapps/{{ GUACAMOLE_APP_NAME }}/translations/en.json
      regexp: '^        "NAME"    :'
      line: '        "NAME"    : "{{ APP_TITLE }}",'
      state: present
 

  - name: Make '{{ GUACAMOLE_HOME }}' directory
    file: path='{{ GUACAMOLE_HOME }}' state=directory
        owner={{ TOMCAT_USER }}
        group={{ TOMCAT_USER }}
        mode=0755
    tags: configuration


  
  - name: Make a link to /etc/guacamole
    file:
      src: '{{ GUACAMOLE_HOME }}'
      dest: /etc/guacamole
      state: link
      force: yes
      follow: true
      owner: "{{ TOMCAT_USER }}"
      group: "{{ TOMCAT_USER }}"
      mode: 0755

  

 
  - name: Install the Python MySQLB module
    pip:
     name: "{{ item }}"
     state: forcereinstall
    with_items: 
       - mysql-connector
       - PyMySQL
     
    
 
  - name: Start/Restart MySQL
    service: name={{ MYSQL_DAEMON }} state=restarted
    
  - name: Copy over guacamole-auth source
    get_url:
      url: http://apache.org/dyn/closer.cgi?action=download&filename=guacamole/{{ GUACAMOLE_VERSION }}/binary/guacamole-auth-jdbc-{{ GUACAMOLE_VERSION }}.tar.gz
      dest: /home/{{ansible_user}}

  - name: Extract guacamole-auth
    unarchive: src="guacamole-auth-jdbc-{{ GUACAMOLE_VERSION }}.tar.gz" copy=no dest=/home/{{ansible_user}}
    

     
  - name: Change the authentication plugin of MySQL root user to mysql_native_password
    shell: mysql -u root -e 'UPDATE mysql.user SET plugin="mysql_native_password" WHERE user="root" AND host="localhost"'
    ignore_errors: yes
    tags: 
      - db
    
  - name: Flush Privileges 
    shell: mysql -u root -e 'FLUSH PRIVILEGES'
    ignore_errors: yes
    tags: 
      - db
  - name: set root password
    mysql_user: 
      name={{ database_root_user }} 
      password={{ database_passwd }} 
      state=present  
      login_user={{ database_root_user }} 
      login_password=''
    ignore_errors: yes
    tags: 
      - db
      
  - name: Create database {{ database_name }}
    mysql_db: name={{ database_name }} state=present login_user={{ database_root_user }} login_password={{ database_passwd }}
    tags: 
      - db
  - name: Create MySQL guacamole user
    mysql_user: name={{ database_user }} password={{ database_passwd }} state=present priv={{ database_name }}.*:ALL login_user={{ database_root_user }} login_password={{ database_passwd }}
    tags: 
      - db
  - name: Run schema on {{ database_name }}
    shell: cat schema/*.sql | {{ database_cmd }} chdir="guacamole-auth-jdbc-{{ GUACAMOLE_VERSION }}/mysql/"
    ignore_errors: true
    
  #- name: Make connection names unique
  #  shell: echo "ALTER TABLE guacamole_connection ADD UNIQUE (connection_name);" | {{ database_cmd }}
  # - name: Change guacadmin password to a randomly generated string
  #   shell: echo "SET @salt = UNHEX(SHA2(UUID(), 256)); UPDATE guacamole_user SET password_salt=@salt and password_hash=UNHEX(SHA2(CONCAT('UNHEX(SHA2(UUID(), 256))', HEX(@salt)), 256)) where username='guacadmin';" | {{ database_cmd }}
  - name: Create {{ GUACAMOLE_HOME }}/extensions directory
    file: path="{{ GUACAMOLE_HOME }}/extensions" state=directory
    
  - name: Copy over guacamole-auth-jdbc-mysql-{{ GUACAMOLE_CLIENT_VERSION }}.jar to {{ GUACAMOLE_HOME }}/extensions
    copy: src="guacamole-auth-jdbc-{{ GUACAMOLE_CLIENT_VERSION }}/mysql/guacamole-auth-jdbc-mysql-{{ GUACAMOLE_VERSION }}.jar" remote_src=True dest="{{ GUACAMOLE_HOME }}/extensions"

  - name: Create {{ GUACAMOLE_HOME }}/lib directory
    file: path="{{ GUACAMOLE_HOME }}/lib" state=directory mode=0755
         
   
    
  - name: get mysql-connector-java--bin.tar.gz 
    get_url:
      url: https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-{{ MYSQL_CONNECTOR_VERSION }}.tar.gz
      dest: /home/{{ansible_user}}
      
  - name: Extract mysql-connector-java-{{ MYSQL_CONNECTOR_VERSION }}.tar.gz
    unarchive: 
      src: mysql-connector-java-{{ MYSQL_CONNECTOR_VERSION }}.tar.gz
      copy: no 
      dest: /home/{{ansible_user}}
      
  - name: copy mysql-connector-java-{{MYSQL_CONNECTOR_VERSION }}-bin.jar to {{ GUACAMOLE_HOME }} /lib
    copy:
       src: "mysql-connector-java-{{ MYSQL_CONNECTOR_VERSION }}/mysql-connector-java-{{MYSQL_CONNECTOR_VERSION }}.jar"
       dest: "{{ GUACAMOLE_HOME }}/lib"
       remote_src: true
       mode: 0755
 
       
  - name: Add guacamole.properties to "{{ GUACAMOLE_HOME }}"
    template: src="guacamole.properties.j2" dest="{{ GUACAMOLE_HOME }}/guacamole.properties" 
    tags: deploy
    
  - name: Add logback.xml.j2 to "{{ GUACAMOLE_HOME }}"
    template: src="logback.xml.j2" dest="{{ GUACAMOLE_HOME }}/logback.xml"
    tags: deploy
    
  - name: Add user-mapping.xml.j2 to "{{ GUACAMOLE_HOME }}"
    template: src="user-mapping.xml.j2" dest="{{ GUACAMOLE_HOME }}/user-mapping.xml"
    tags: deploy   
    
  - name: install ldap extention
    tags: ldap
    get_url:
      url: http://apache.org/dyn/closer.cgi?action=download&filename=guacamole/{{ GUACAMOLE_VERSION }}/binary/guacamole-auth-ldap-{{ GUACAMOLE_VERSION }}.tar.gz
      dest: /home/{{ansible_user}}
      
  - name: Extract guacamole-auth-ldap-{{ GUACAMOLE_VERSION }}.tar.gz
    tags: ldap
    unarchive: 
      src: guacamole-auth-ldap-{{ GUACAMOLE_VERSION }}.tar.gz
      copy: no
      dest: /home/{{ansible_user}}
      mode: 0755

      
  - name: copy guacamole-auth-ldap-{{ GUACAMOLE_VERSION }}.jar to {{ GUACAMOLE_HOME }}/extensions
    tags: ldap
    copy:
       src: "guacamole-auth-ldap-{{ GUACAMOLE_VERSION }}/guacamole-auth-ldap-{{ GUACAMOLE_VERSION }}.jar"
       dest: "{{ GUACAMOLE_HOME }}/extensions"
       remote_src: true
       mode: 0755      
  - name: Cleanup temp files
    file: path={{ item }} state=absent
    with_items:
      - /home/{{ansible_user}}/guacamole-auth-jdbc-{ GUACAMOLE_VERSION }}.tar.gz
      - /home/{{ansible_user}}/guacamole-auth-jdbc-{ GUACAMOLE_VERSION }}
      - /home/{{ansible_user}}/guacamole-server-{{ GUACAMOLE_VERSION }}.tar.gz
      - /home/{{ansible_user}}/guacamole-server-{{ GUACAMOLE_VERSION }}
      - /home/{{ansible_user}}/guacamole-auth-ldap-{{ GUACAMOLE_VERSION }}.tar.gz
      - /home/{{ansible_user}}/guacamole-auth-ldap-{{ GUACAMOLE_VERSION }}
    ignore_errors: yes
    tags: cleanup
    
  - name: set permission and owners
    tags: deploy
    file:
      path: "{{ GUACAMOLE_HOME }}"
      state: directory
      mode: 0755
      recurse: yes
      owner: "{{ TOMCAT_USER }}"
      group: "{{ TOMCAT_USER }}"
 
      
  - name: Disable SELinux 
    selinux:
     state: disabled
    when: ansible_distribution == "CentOS"
    
  - name: restart services ({{ TOMCAT_NAME }},  {{ MYSQL_DAEMON }}, guacd)
    service: name={{ item }} state=restarted
    with_items: [ '{{ MYSQL_DAEMON }}', guacd, '{{ TOMCAT_NAME }}']
    ignore_errors: yes
    tags: deploy
    
  
